// Define the vulnerable parameters as a Set based on OWASP Top 25                                                                                                      
 
// SSRF Parameters
String[] ssrfParams = {
    "dest=","redirect=","uri=","continue=","url=","window=","data=","reference=","site=","html=","val=","validate=","domain=","callback=","return=","page=","feed=","host=","port=","to=","out=","dir="
};
 
// SQL injection parameters
String[] sqliParams = {
    "id=","select=","report=","search=","category=","file=","class=","news=","item=","menu=","ref=","title=","topic=","thread=","form=","main=","nav=","region="
};
 
// XSS parameters
String[] xssParams = {         
    "lang=","keyword=","keywords=","year=","email=","month=","image=","list_type=","terms=","categoryid=","key=","type=","name=","1=","begindate=","enddate="
};
 
// LFI parameters
String[] lfiParams = {         
    "cat=","action=","board=","date=","detail=","download=","path=","folder=","prefix=","include=","inc=","locate=","show=","doc=","view=","content=","document=","layout=","mod=","conf="
};
 
// Open Redirect parameters    
String[] openRedirectParams = {
    "next=","target=","rurl=","destination=","redir=","redirect_uri=","redirect_url=","image_url=","go=","returnTo=","return to=","checkout_url=","return_path="
};
 
// RCE parameters
String[] rceParams = {         
    "cmd=","exec=","command=","execute=","ping=","query=","jump=","code=","reg=","do=","func=","arg=","option=","load=","process=","step=","read=","feature=","exe=","module=","payload=","run=","print="
};
 
if (requestResponse.request().url() != null) {
    String requestUrl = requestResponse.request().url();
    String requestBody = requestResponse.request().bodyToString();
 
    String[][] allParams = {
        ssrfParams,sqliParams,xssParams,lfiParams,openRedirectParams,rceParams
    };
 
    int queryStart = requestUrl.indexOf("?");
    String queryString = "";
    if (queryStart != -1 && queryStart < requestUrl.length() - 1) {
		queryString = requestUrl.substring(queryStart + 1);
    }
 
    String[] allInputParams = (queryString + "&" + requestBody).split("&");
 
    // Check each parameter against the list of vulnerable parameters
    for (String inputParam : allInputParams) {
		// Remote Code Execution (RCE) Annotations
        for (String param : rceParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("Remote Code Execution", HighlightColor.highlightColor("black"));
            }
        }
		// Server-Side Request Forgery (SSRF) Annotations
        for (String param : ssrfParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("Server-Side Request Forgery (SSRF)", HighlightColor.RED);
            }
        }
        // SQL Injection (SQLi) Annotations
        for (String param : sqliParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("SQL Injection (SQLi)", HighlightColor.ORANGE);
            }
        }
        // Cross-Site Scripting (XSS) Annotations
        for (String param : xssParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("Cross-Site Scripting", HighlightColor.YELLOW);
            }
        }
        // Local File Inclusion (LFI) Annotations
        for (String param : lfiParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("Local File Inclusion", HighlightColor.GREEN);
            }
        }
        // Open-Redirect Annotations
        for (String param : openRedirectParams) {
            if (inputParam.startsWith(param)) {
                Annotations.annotations("Open-Redirect", HighlightColor.BLUE);
            }
        }
        for (String[] params : allParams) {
            for (String param : params) {
                if (inputParam.startsWith(param)) {
                    return true;
                }
            }
        }   
    }       
}
 
return false;
